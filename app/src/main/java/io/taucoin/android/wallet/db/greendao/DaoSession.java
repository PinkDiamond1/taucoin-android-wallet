package io.taucoin.android.wallet.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import io.taucoin.android.wallet.db.entity.UTXORecord;
import io.taucoin.android.wallet.db.entity.TransactionHistory;
import io.taucoin.android.wallet.db.entity.KeyValue;

import io.taucoin.android.wallet.db.greendao.UTXORecordDao;
import io.taucoin.android.wallet.db.greendao.TransactionHistoryDao;
import io.taucoin.android.wallet.db.greendao.KeyValueDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig uTXORecordDaoConfig;
    private final DaoConfig transactionHistoryDaoConfig;
    private final DaoConfig keyValueDaoConfig;

    private final UTXORecordDao uTXORecordDao;
    private final TransactionHistoryDao transactionHistoryDao;
    private final KeyValueDao keyValueDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        uTXORecordDaoConfig = daoConfigMap.get(UTXORecordDao.class).clone();
        uTXORecordDaoConfig.initIdentityScope(type);

        transactionHistoryDaoConfig = daoConfigMap.get(TransactionHistoryDao.class).clone();
        transactionHistoryDaoConfig.initIdentityScope(type);

        keyValueDaoConfig = daoConfigMap.get(KeyValueDao.class).clone();
        keyValueDaoConfig.initIdentityScope(type);

        uTXORecordDao = new UTXORecordDao(uTXORecordDaoConfig, this);
        transactionHistoryDao = new TransactionHistoryDao(transactionHistoryDaoConfig, this);
        keyValueDao = new KeyValueDao(keyValueDaoConfig, this);

        registerDao(UTXORecord.class, uTXORecordDao);
        registerDao(TransactionHistory.class, transactionHistoryDao);
        registerDao(KeyValue.class, keyValueDao);
    }
    
    public void clear() {
        uTXORecordDaoConfig.clearIdentityScope();
        transactionHistoryDaoConfig.clearIdentityScope();
        keyValueDaoConfig.clearIdentityScope();
    }

    public UTXORecordDao getUTXORecordDao() {
        return uTXORecordDao;
    }

    public TransactionHistoryDao getTransactionHistoryDao() {
        return transactionHistoryDao;
    }

    public KeyValueDao getKeyValueDao() {
        return keyValueDao;
    }

}
